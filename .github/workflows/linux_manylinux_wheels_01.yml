name: Linux x86_64 ManyLinux Wheels (pp*)

on: workflow_dispatch
jobs:
  wheels-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout ORE-SWIG
      uses: actions/checkout@v4
    - name: get QuantLib-SWIG
      run: |
        git submodule update --init
    - name: Checkout ORE
      uses: actions/checkout@v4
      with:
          repository: OpenSourceRisk/Engine
          path: './ORE'
          fetch-depth: 0
    - name: get QuantLib
      run: |
        cd ORE
        git submodule update --init
    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10
    #- name: Install eigen
    #  run: |
    #    curl -O -L https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz
    #    tar zxvf eigen-3.4.0.tar.gz
    #    cd eigen-3.4.0
    #    mkdir build
    #    cd build
    #    cmake ..
    #    export 
    #    export Eigen3_DIR=$CURRENT_DIR/eigen-3.4.0
    - name: Build Zlib
      run: |
        pwd
        curl -O -L https://www.zlib.net/zlib-1.3.1.tar.gz
        tar xzvf zlib-1.3.1.tar.gz
        cd zlib-1.3.1
        ./configure
        make
        export ZLIB_ROOT=$CURRENT_DIR/zlib-1.3.1
    - name: Set up Boost
      run: |
        curl -O -L https://boostorg.jfrog.io/artifactory/main/release/1.80.0/source/boost_1_80_0.tar.gz
        tar xfz boost_1_80_0.tar.gz
        cd boost_1_80_0
        sudo ./bootstrap.sh --with-libraries=date_time,filesystem,iostreams,log,regex,serialization,system,test,thread,timer
        sudo ./b2 install -sZLIB_SOURCE=$ZLIB_ROOT
        pwd
        ls
    #- name: Build ORE
    #  run : pwd; cd ORE; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=ON -DORE_USE_ZLIB=ON -DQL_BUILD_EXAMPLES=false -DQL_BUILD_TEST_SUITE=false -DQL_BUILD_BENCHMARK=false -DQL_ENABLE_SESSIONS=true -DORE_BUILD_DOC=false ..
    #- name: cmake build
    #  run: pwd; cd ORE; cd build; cmake --build . -j $(nproc); sudo cmake --install .
    #- name: Wrap ORE-SWIG
    #  run: pwd; cd OREAnalytics-SWIG/Python; python setup.py wrap
    #- name: Copy Configuration
    #  run: |
    #     pwd
    #     cp Wheels/oreanalytics-config.linux OREAnalytics-SWIG/oreanalytics-config
    #     cd Wheels
    #     #chmod +x before_all_linux.sh
    #- name: Build ORE wheels
    #  uses: pypa/cibuildwheel@v2.19
    #  env:
    #    CIBW_BUILD: "*-manylinux*"
    #    CIBW_SKIP: cp*
    #    #CIBW_BUILD: cp37-manylinux_x86_64
    #    #CIBW_BUILD: cp38-manylinux_x86_64
    #    #CIBW_BUILD: cp39-manylinux_x86_64
    #    #CIBW_BUILD: cp310-manylinux_x86_64
    #    #CIBW_BUILD: cp311-manylinux_x86_64
    #    CIBW_ARCHS_LINUX: x86_64
    #    CIBW_BUILD_VERBOSITY: 2
    #    ORE_USE_ZLIB: 1
    #    BOOST_ROOT: /home/runner/work/ORE-SWIG/ORE-SWIG/boost_1_80_0
    #    #CIBW_BEFORE_ALL_LINUX: ./Wheels/before_all_linux.sh
    #    #CIBW_ENVIRONMENT_LINUX: CXXFLAGS="-O3 -g0"
    #    BOOST_LIB: /home/runner/work/ORE-SWIG/ORE-SWIG/boost_1_80_0
    #    CIBW_ENVIRONMENT_LINUX: CXXFLAGS="-std=c++17 -O3 -g0" ORE=/project/ORE
    #    CIBW_ENVIRONMENT_PASS_LINUX: CXXFLAGS
    #  with:
    #    package-dir: /home/runner/work/ORE-SWIG/ORE-SWIG/OREAnalytics-SWIG/Python
    #- name: Save wheels as artifacts
    #  uses: actions/upload-artifact@v4
    #  with:
    #    name: wheels-linux-manylinux-x86_64
    #    path: ./wheelhouse/*.whl
