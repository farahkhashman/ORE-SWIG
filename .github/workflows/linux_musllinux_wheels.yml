name: Linux x86_64 Musllinux Wheels

on: workflow_dispatch
jobs:
  wheels-linux:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout ORE-SWIG
      uses: actions/checkout@v4
    - name: get QuantLib-SWIG
      run: |
        git submodule update --init
    - name: Checkout ORE
      uses: actions/checkout@v4
      with:
          repository: OpenSourceRisk/Engine
          path: './ORE'
          fetch-depth: 0
    - name: get QuantLib
      run: |
        cd ORE
        git submodule update --init
    - name: Set Swap Space
      uses: pierotofy/set-swap-space@master
      with:
        swap-size-gb: 10
    - name: Install eigen
      run: |
        curl -O -L https://gitlab.com/libeigen/eigen/-/archive/3.4.0/eigen-3.4.0.tar.gz
        tar zxvf eigen-3.4.0.tar.gz
        cd eigen-3.4.0
        mkdir build
        cd build
        cmake ..
        export 
        export Eigen3_DIR=$CURRENT_DIR/eigen-3.4.0
    - name: Set up Boost
      run: |
        sudo apt update
        sudo apt install -y libboost-all-dev libboost-test-dev ninja-build
    - name: Build Zlib
      run: |
        pwd
        curl -O -L https://www.zlib.net/zlib-1.3.1.tar.gz
        tar xzvf zlib-1.3.1.tar.gz
        cd zlib-1.3.1
        ./configure
        make
        export ZLIB_ROOT=$CURRENT_DIR/zlib-1.3.1
    - name: Build ORE
      run : pwd; cd ORE; mkdir SharedLibs; mkdir build; cd build; cmake -DCMAKE_BUILD_TYPE=Release -DORE_USE_ZLIB=ON -DQL_BUILD_EXAMPLES=false -DQL_BUILD_TEST_SUITE=false -DQL_BUILD_BENCHMARK=false -DQL_ENABLE_SESSIONS=true -DORE_BUILD_DOC=false -G "Ninja" ..
    - name: cmake build
      run: pwd; cd ORE; cd build; cmake --build . -j $(nproc)
    - name: check directories
      run: pwd; cd ORE; cd build; ls; cd QuantExt; pwd; ls -al; tree;
    - name: Wrap ORE-SWIG
      run: pwd; cd OREAnalytics-SWIG/Python; python setup.py wrap
    - name: Copy Configuration
      run: |
         pwd
         cp Wheels/oreanalytics-config.linux OREAnalytics-SWIG/oreanalytics-config
         cd Wheels
         chmod +x before_all_linux.sh
    - name: Build ORE wheels
      uses: pypa/cibuildwheel@v2.17.0
      env:
        CIBW_BUILD: "*-musllinux*"
        CIBW_SKIP: cp36-*
        CIBW_ARCHS_LINUX: x86_64
        CIBW_BUILD_VERBOSITY: 2
        CIBW_BEFORE_ALL_LINUX: ./Wheels/before_all_linux.sh
        #CIBW_ENVIRONMENT_LINUX: CXXFLAGS="-O3 -g0"
        CIBW_ENVIRONMENT_LINUX: CXXFLAGS="-std=c++17 -O3 -g0" ORE=/project/ORE
        CIBW_ENVIRONMENT_PASS_LINUX: CXXFLAGS
        CIBW_REPAIR_WHEEL_COMMAND_LINUX: "LD_LIBRARY_PATH=/usr/local/lib LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/project/ORE/SharedLibs auditwheel repair --lib-sdir . -w {dest_dir} {wheel}"
      with:
        package-dir: /home/runner/work/ORE-SWIG/ORE-SWIG/OREAnalytics-SWIG/Python
    - name: Save wheels as artifacts
      uses: actions/upload-artifact@v4
      with:
        name:  wheels-linux-musllinux-x86_64
        path: ./wheelhouse/*.whl
